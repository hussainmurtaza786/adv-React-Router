{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Hussain Murtaza/12-adv-starting-project/frontend/src/pages/Events.jsx\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => {\n        /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: 'Could not fetch data' }), {\n    //   status: 500,\n    // })\n    throw json({\n      message: 'Could not fetch data'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","defer","json","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","resolve","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/admin/Documents/Hussain Murtaza/12-adv-starting-project/frontend/src/pages/Events.jsx"],"sourcesContent":["import { Await, defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n\n  const { events } = useLoaderData()\n\n\n\n  return (\n    <>\n\n      <Await resolve={events}>\n        {(loadedEvents) => {\n          <EventsList events={loadedEvents} />\n        }}\n      </Await>\n\n    </>\n  );\n}\n\nexport default EventsPage;\n\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: 'Could not fetch data' }), {\n    //   status: 500,\n    // })\n    throw json(\n      { message: 'Could not fetch data' },\n      {\n        status: 500,\n      }\n\n    )\n  } else {\n\n    return response\n  }\n\n}\n\nexport function loader() {\n\n  return defer({\n    events: loadEvents()\n  })\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAM;IAAEC;EAAO,CAAC,GAAGR,aAAa,CAAC,CAAC;EAIlC,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAEEN,OAAA,CAACN,KAAK;MAACa,OAAO,EAAEF,MAAO;MAAAC,QAAA,EACnBE,YAAY,IAAK;QACjB,aAAAR,OAAA,CAACF,UAAU;UAACO,MAAM,EAAEG;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBAER,CAAC;AAEP;AAACR,EAAA,CAjBQD,UAAU;EAAA,QAEEN,aAAa;AAAA;AAAAgB,EAAA,GAFzBV,UAAU;AAmBnB,eAAeA,UAAU;AAGzB,eAAeW,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAMrB,IAAI,CACR;MAAEsB,OAAO,EAAE;IAAuB,CAAC,EACnC;MACEC,MAAM,EAAE;IACV,CAEF,CAAC;EACH,CAAC,MAAM;IAEL,OAAOJ,QAAQ;EACjB;AAEF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EAEvB,OAAOzB,KAAK,CAAC;IACXU,MAAM,EAAES,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}